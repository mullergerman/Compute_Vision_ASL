{
  "uid": "client-delay",
  "title": "Client Delay (ms) por Sesión",
  "schemaVersion": 39,
  "version": 1,
  "refresh": "10s",
  "tags": [
    "client",
    "delay",
    "android"
  ],
  "templating": {
    "list": [
      {
        "name": "session",
        "label": "session",
        "type": "query",
        "datasource": {
          "type": "influxdb",
          "uid": "InfluxDB"
        },
        "refresh": 2,
        "hide": 0,
        "query": "from(bucket: \"example-bucket\") |> range(start: -1h) |> filter(fn: (r) => r._measurement == \"client.delay_ms\") |> keep(columns: [\"session\"]) |> distinct(column: \"session\")",
        "multi": false,
        "includeAll": false
      },
      {
        "name": "fe",
        "label": "fe",
        "type": "query",
        "datasource": {
          "type": "influxdb",
          "uid": "InfluxDB"
        },
        "refresh": 2,
        "hide": 0,
        "query": "from(bucket: \"example-bucket\") |> range(start: -1h) |> filter(fn: (r) => r._measurement == \"client.delay_ms\") |> keep(columns: [\"fe\"]) |> distinct(column: \"fe\")",
        "multi": false,
        "includeAll": true,
        "allValue": ".*"
      }
    ]
  },
  "panels": [
    {
      "type": "timeseries",
      "title": "Delay (ms) por sesión",
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "InfluxDB"
          },
          "refId": "A",
          "query": "from(bucket: \"example-bucket\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"client.delay_ms\" and r.session == \"${session}\" and r.fe =~ /${fe}/)\n  |> group(columns:[\"session\",\"fe\",\"device\",\"net\"])\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)",
          "queryType": "flux"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "ms",
          "custom": {
            "lineWidth": 2
          }
        },
        "overrides": []
      }
    },
    {
      "type": "stat",
      "title": "P95 (últimos 15 min)",
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 0,
        "y": 12
      },
      "options": {
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "values": false
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "InfluxDB"
          },
          "refId": "B",
          "query": "from(bucket: \"example-bucket\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"client.delay_ms\" and r.session == \"${session}\" and r.fe =~ /${fe}/)\n  |> quantile(q: 0.95)",
          "queryType": "flux"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "ms"
        }
      }
    },
    {
      "type": "stat",
      "title": "Promedio (15 min)",
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 8,
        "y": 12
      },
      "options": {
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "values": false
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "InfluxDB"
          },
          "refId": "C",
          "query": "from(bucket: \"example-bucket\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"client.delay_ms\" and r.session == \"${session}\" and r.fe =~ /${fe}/)\n  |> mean()",
          "queryType": "flux"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "ms"
        }
      }
    },
    {
      "type": "stat",
      "title": "Máximo (15 min)",
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 16,
        "y": 12
      },
      "options": {
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "values": false
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "InfluxDB"
          },
          "refId": "D",
          "query": "from(bucket: \"example-bucket\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"client.delay_ms\" and r.session == \"${session}\" and r.fe =~ /${fe}/)\n  |> max()",
          "queryType": "flux"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "ms"
        }
      }
    }
  ],
  "time": {
    "from": "now-15m",
    "to": "now"
  }
}
